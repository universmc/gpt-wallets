//console.log(' ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó'),
//console.log(' ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ú®Doc assisnt -ia ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£'),
//console.log(' ‚ïë[ü§ì.abc]                             ‚ïë'),
//console.log(' ‚ïë                                     ‚ïë'),
//console.log(' ‚ïë                                     ‚ïë'),
//console.log(' ‚ïë 1                                   ‚ïë'),
//console.log(' ‚ïë 2                                   ‚ïë'),
//console.log(' ‚ïë 5                                   ‚ïë'),
//console.log(' ‚ïë 4                                   ‚ïë'),
//console.log(' ‚ïë 5                                   ‚ïë'),
//console.log(' ‚ïë 8                                   ‚ïë'),
//console.log(' ‚ïë 7                                   ‚ïë'),
//console.log(' ‚ïë 8                                   ‚ïë'),
//console.log(' ‚ïë                                     ‚ïë'),
//console.log(' ‚ïë                                     ‚ïë'),
//console.log(' ‚ïëO(x,y,z).ts                          ‚ïë'),
//console.log(' ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£'),
//console.log(' ‚ïë[‚ú®] [üåå][üìî][üí¨][üíª][üèóÔ∏è][üå¥] [üõ∞] ‚ïë'),
//console.log(' ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù')


const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

async function main() {
  let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  const chatCompletion = await groq.chat.completions.create({
    "messages": [
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[brainstorming(session.timestamp)]"},
      {role: "system",name:"[üåå.systemDream]", content:"initilisation de `umc-ssh [‚Ñ¶.univers-mc]`http://dev.univers-mc.cloud"},
      {role: "assistant",name:"[üí¨.cloud]", content:"init groq -dev {php -S localhost:5144}"},
      {role: "system",name:"[‚Ñ¶.univers-mc]", content: "init1_`[üåå.systemDream]` git -m commit https://github.com/universmc/systemDream" },
      {role: "system",name:"", content:systemContent},
      {role: "user",name:"[üå¥.userGroq]", content: "groq`[üìî.codex]`" },
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[dial:conversation(message/response)entre(user/assistant))]"},

      {
        "role": "system",
        "content": "[zira]"
      },
      {
        "role": "user",
        "content": "[content]:template.response"
      },
      {
        "role": "assistant",
        "content": "groq response"
      },
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[END]:[brainstorming(session.timestamp)]"},
      {role: "system",name:"[üìî.codex]", content:"`systemContent` genetation de la documention et traduction de la documentation en lang:Fr, Fran√ßais:stp!"},
      {role: "system",name:"[üåå.systemDream]", content:"groq"},
    ],
    model: "llama2-70b-4096",
    temperature: 0.6,
    max_tokens: 2048,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "data/train/mdMessages_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();