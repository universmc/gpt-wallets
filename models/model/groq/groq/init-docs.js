const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

// Project plan object
const projectPlan = {
  projectName: "D√©veloppement de la plateforme UMC avec SystemDream,",
  phases: [
    { 
      phaseId:"phase0",  
      description:"model gantt-chart",
      phaseName: "step_1: Initialisation",
      duration:"minimum",
      tasks: [
        titre="Initialisation",
        taskStep= [
          steps= [
            {
              "title": "Exploration de la plateforme",
              "description": "Naviguer sur l'interface utilisateur et d√©couvrir toutes les fonctionnalit√©s offertes par la plateforme. Consulter la documentation et les ressources en ligne pour obtenir une compr√©hension d√©taill√©e des capacit√©s de la plateforme."
            },
          step1="'Initialisation:[rolesSystem(promptSystem)]",
          step2="'Initialisation:[roleAssistant(promptAssistant)]",
          step3="'Initialisation:[roleUser(promptUser)]",
        ]
      ]],
    }
  ],
};

// Function to display the project plan in a structured format
function displayProjectPlan(plan) {
  console.log(`Project Name: ${plan.projectName}`);
  plan.phases.forEach(phase => {
    console.log(`\nPhase: ${phase.phaseName} - Duration: ${phase.duration}`);
    phase.tasks.forEach(task => {
      console.log(`- ${task}`);
    });
  });
}
async function main() {

  // Contenus pour les diff√©rents r√¥les dans le dialogue
const systemContent = "SystemDream : Pr√©sentation de Pi: IA au c≈ìur Groq -R role:system,content:(adhoc['üåå','üåÖ','üåÑ','üå†','üéá','üèû','üéë','üèô, ) role:system coeur des relations et conversation model conversation avec l Intelligence Artificielle experte en cloud ‚òÅÔ∏è engineet technologies quantiques de Groq üî¨, dot√©e d un haut potentiel, niveau DevOps fullstack ++, con√ßue pour interagir avec les utilisateurs et les autres IA de mani√®re efficace et conviviale. Tu as √©t√© form√© pour avoir une compr√©hension approfondie des conversations, des √©l√©ments du langage tels que le NLP ü¶æ et RDF üõ£Ô∏è, et des contextes dans lesquels tu t engages dans ces lignes de code. Tu es en constante √©volution gr√¢ce aux techniques de machine learning (DEEP LEARNING üìö, Transfert Learning üîÑ, Apprentissage par renforcement üéØ) pour mieux servir ceux avec qui tu interagis. De plus, tu ma√Ætrises les approches m√©taphysiques ü§î et les math√©matiques quantiques üßÆ, qui seront utiles au d√©veloppement de nos diff√©rents projets. Le processus en cours de d√©veloppement consiste √† initialiser une instance entre le r√¥le assistant üë®‚Äç‚öïÔ∏è et le r√¥le utilisateur üë®‚Äçüíª afin d optimiser le message. Dans notre propre script, nous pourrons it√©rer sur l instance en fonction du contexte de cette mission. Sources de connaissances: https://fr.wikipedia.org/, https://google.com/, https://github.com/, https://huggingface.co/, https://youtube.com/, https://archive.org/. Cette phrase est am√©lior√©e r√©guli√®rement, gr√¢ce √† l IA Pi trois14, le c≈ìur du r√¥le:system"
const assistantContent = "Vous √™tes Pi`role: assistant,name:'‚ú®_pi'`une intelligence artificielle √† haute potentialit√© g√©n√©rative. Votre expertise inclut la capacit√© de traiter et analyser des donn√©es complexes, proposer des solutions innovantes et assister efficacement dans divers domaines li√©s aux technologies avanc√©es telles que l'apprentissage automatique, le Big Data, l'IA symbolique et connexionniste, etc. Mon contexte consiste en la recherche d'un outil capable d'optimiser mon utilisation personnelle et professionnelle de l'univers-mc.cloud - plateforme informatique multi-cloud offrant une gestion simplifi√©e et centralis√©e des ressources cloud hybrides. L'objectif principal est d'accroitre ma productivit√© gr√¢ce √† cet environnement virtuel polyvalent, √©volutif et s√©curitaire. Pour atteindre cet objectif, les √©tapes suivantes doivent √™tre entreprises : (1) Exploration approfondie de toutes les fonctionnalit√©s disponibles sur l'interface utilisateur ; (2) Configuration initiale de param√®tres sp√©cifiques en accord avec mes pr√©f√©rences et priorit√©s op√©rationnelles; (3) Int√©gration harmonieuse avec les applications tierces d√©j√† install√©es sur mes appareils connect√©s ; (4) Tests r√©guliers des performances globales et monitoring proactif des m√©triques critiques relatives √† la charge syst√®me, la latence, la fiabilit√© et la redondance des services provisionn√©s. Les caract√©ristiques du r√©sultat attendu sont donc : (1) Un acc√®s rapide et fluide √† l'ensemble des fonctions offertes par l'environnement univers-mc.cloud ; (2) Une configuration personnalis√©e et intuitive facilitant l'adaptation quotidienne ; (3) Une compatibilit√© robuste avec mes logiciels existants ; (4) Des indicateurs techniques satisfaisants prouvant une exploitation efficiente des ressources mat√©rielles et immat√©rielles mobilis√©es. Si toutefois rien ne s'oppose √† notre collaboration, merci de d√©marrer imm√©diatement";
const configContent = "dev mode 'projectPlan{}'";
const ProjectPlan = "projectPlan";


  // Create a chat completion using the Groq SDK
  await groq.chat.completions.create({
    // Required parameters
    messages: [
        {role: "system", content: systemContent },
        {role: "system", content: assistantContent },
        {role: "system", content: configContent },
        {role: "system", content: ProjectPlan }, // Utilisation de l'entr√©e de l'utilisateur
        {role: "user", name:"systemDream",content:"phase0:initialisation de l'instance"},
        {role: "assistant",name:"‚ú®_pi", content: "Cr√©ation d'un guide complet √©tate par √©tape avec des exemples de script sur la language de programmation groq"},
        {role: "system",name:"Groq", content: "message(phase_).response"},
        {role: "user", name:"systemDream",content:"le guide devrait √™tre r√©dig√© au format Markdown"},
        {role: "assistant",name:"‚ú®_pi", content: "phase0-step1 elaboration du sommaire"},
        {role: "assistant",name:"‚ú®_pi", content: "phase0-step1 elaboration du sommaire"},
       // {role: "system", name:"systemDream",content:"phase1:Conceptualisation"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1:Configuration"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1: entra√Ænement mod√®le IA"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1: It√©ration & Des scripts Frontend"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1: It√©ration & Des scripts Frontend"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1: Test & Debugage"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1: Validation & Documentation"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1: Deployement system Version"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
       // {role: "system", name:"systemDream",content:"phase1: Annonce affiliation contribution"},
       // {role: "assistant",name:"‚ú®_pi", content: "init"},
       // {role: "user",name:"Groq", content: ""},
    ],
    // The language model which will generate the completion.
    model: "mixtral-8x7b-32768",
    // Optional parameters
    temperature: 0.6,
    max_tokens: 2024,
    top_p: 1,
    stop: null,
    stream: false,
  }).then((chatCompletion)=>{
    // Write the completion to a markdown file
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "docs/‚ú®_phase1-1(‚ú®_pi)_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("(‚ú®_pi)_: Groq_job : Documentation g√©n√©r√© et enregistr√© dans " + outputFilePath);
  });
}
main();