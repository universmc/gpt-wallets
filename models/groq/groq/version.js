const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

async function main() {
  const systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  const assistantProfessor =`[
    "question.r": [
      {
        "role": "assistant",
        "name:"professor"
        "content": ""
      }
    ],
    "model": "gemma-7b-it",
    "temperature": 1,
    "max_tokens": 1024,
    "top_p": 1,
    "stream": true,
    "stop": null
  ]`;

  const Knowledge_data = `${systemContent},${assistantProfessor}`;
  
  
  const chatCompletion = await groq.chat.completions.create({
    "messages": [
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[brainstorming{session.timestamp}]"},
      {role: "system",name:"[üåå.systemDream]", content:`${systemContent}+${Knowledge_data}`},
      {role: "system",name:"[üå¥.Groq]", content: "groq`[üìî.codex]`" },
      {role: "assistant",name:"[üìî.codex]", content:"phase[02]:[DEV]:[initilation{instance.role}]"},
      {role: "system",name:"[üåå.systemDream]", content:`${assistantProfessor}`},
      {role: "assistant",name:"[üìî.codex]", content:"phase[03]:[DEV]:[iniatilation{instance.groq}]"},
      //
//      {
//        "role": "system",
//        "content": "[üë®üèΩ‚Äçüíª.Mike]:"
//      },
//      {
//        "role": "user",
//        "content": "[content]:template.response"
//      },
//      {
//        "role": "assistant",
//        "content": "groq response"
//      },
//      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[END]:[brainstorming(session.timestamp)]"},
//      {role: "system",name:"[üìî.codex]", content:"`systemContent` genetation de la documention et traduction de la documentation en lang:Fr, Fran√ßais:stp!"},
//      {role: "system",name:"[üåå.systemDream]", content:"groq"},
    ],
    model: "mixtral-8x7b-32768",
    temperature: 0.6,
    max_tokens: 2048,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "temps/umc_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans le" + outputFilePath);
});
}

main();